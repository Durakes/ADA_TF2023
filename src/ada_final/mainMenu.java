/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ada_final;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jesus
 */
public class mainMenu extends javax.swing.JFrame {

    /**
     * Creates new form mainMenu
     */
    
    // Crea un modelo de tabla
    DefaultTableModel modeloTabla = new DefaultTableModel();
    
    public Algoritmo algoritmoGeneral = new Algoritmo() ;
    public mainMenu() {
        
        initComponents();
        parametrizarTabla();
    }
    
    public mainMenu(Algoritmo algoritmo) {
        algoritmoGeneral = algoritmo;
        initComponents();  // Asegúrate de llamar a este método en tu constructor.
       
        parametrizarTabla();
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Agregar Horarios Fijos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Agregar Tareas");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Organizar Calendario");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        frameTareasFijas frame1 = new frameTareasFijas(algoritmoGeneral);
        frame1.setVisible(true);
        this.dispose();  // Cierra el JFrame3 al abrir el JFrame1
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        TareaFront frame2 = new TareaFront(algoritmoGeneral);
        frame2.setVisible(true);
        this.dispose();  // Cierra el JFrame3 al abrir el JFrame2
    }//GEN-LAST:event_jButton2ActionPerformed

    
    public void parametrizarTabla()
    {
        // Crea un modelo de tabla
        modeloTabla = new DefaultTableModel();
        jTable1.setModel(modeloTabla);

        // Agrega las columnas al modelo de la tabla
        modeloTabla.addColumn(""); // Columna vacía para horas
        for (int i = 0; i < algoritmoGeneral.diasDeLaSemana; i++) {
            modeloTabla.addColumn(getNombreDia(i));
        }
    }
    
    public void actualizarTabla()
    {
        modeloTabla.setRowCount(0);
        // Obtén los resultados del calendario
        String[][] calendarioFinal = algoritmoGeneral.calendarioFinal;

        /*
        // Crea un modelo de tabla
        DefaultTableModel modeloTabla = new DefaultTableModel();
        jTable1.setModel(modeloTabla);

        // Agrega las columnas al modelo de la tabla
        modeloTabla.addColumn(""); // Columna vacía para horas
        for (int i = 0; i < algoritmoGeneral.diasDeLaSemana; i++) {
            modeloTabla.addColumn(getNombreDia(i));
        }

        */
        // Agrega los datos al modelo de la tabla
        int horaIni = 7;
        for (int hora = 0; hora < algoritmoGeneral.horasDelDia; hora++) {
            Object[] fila = new Object[algoritmoGeneral.diasDeLaSemana + 1];
            fila[0] = horaIni + "-" + (horaIni + 1);
            for (int dia = 0; dia < algoritmoGeneral.diasDeLaSemana; dia++) {
                fila[dia + 1] = calendarioFinal[dia][hora];
            }
            modeloTabla.addRow(fila);
            horaIni++;
        }
    }
    
    // Método para obtener el nombre del día según el índice
    private String getNombreDia(int indice) {
        String[] nombresDias = {"Lun", "Mar", "Mie", "Jue", "Vie", "Sab", "Dom"};
        return nombresDias[indice];
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        // TODO add your handling code here:
        algoritmoGeneral.finishCalendario();
        
        actualizarTabla();
        /*
        // Obtén los resultados del calendario
        String[][] calendarioFinal = algoritmoGeneral.calendarioFinal;

        // Crea un modelo de tabla
        DefaultTableModel modeloTabla = new DefaultTableModel();
        jTable1.setModel(modeloTabla);

        // Agrega las columnas al modelo de la tabla
        modeloTabla.addColumn(""); // Columna vacía para horas
        for (int i = 0; i < algoritmoGeneral.diasDeLaSemana; i++) {
            modeloTabla.addColumn(getNombreDia(i));
        }

        // Agrega los datos al modelo de la tabla
        int horaIni = 7;
        for (int hora = 0; hora < algoritmoGeneral.horasDelDia; hora++) {
            Object[] fila = new Object[algoritmoGeneral.diasDeLaSemana + 1];
            fila[0] = horaIni + "-" + (horaIni + 1);
            for (int dia = 0; dia < algoritmoGeneral.diasDeLaSemana; dia++) {
                fila[dia + 1] = calendarioFinal[dia][hora];
            }
            modeloTabla.addRow(fila);
            horaIni++;
        }
        */
        
        /*
        algoritmoGeneral.finishCalendario();

        // Obtén los resultados del calendario
        boolean[][] calendario = algoritmoGeneral.calendarioBool;

        // Crea un modelo de tabla
        DefaultTableModel modeloTabla = new DefaultTableModel();
        jTable1.setModel(modeloTabla);

        // Agrega las columnas al modelo de la tabla
        modeloTabla.addColumn(""); // Columna vacía para horas
        for (int i = 0; i < algoritmoGeneral.diasDeLaSemana; i++) {
            modeloTabla.addColumn(getNombreDia(i));
        }
        
        // Agrega los datos al modelo de la tabla
        int horaIni = 7;
        for (int hora = 0; hora < algoritmoGeneral.horasDelDia; hora++) {
            Object[] fila = new Object[algoritmoGeneral.diasDeLaSemana + 1];
            fila[0] = horaIni + "-" + (horaIni + 1);
            for (int dia = 0; dia < algoritmoGeneral.diasDeLaSemana; dia++) {
                fila[dia + 1] = calendario[dia][hora] ? "1" : "0";
            }
            modeloTabla.addRow(fila);
            horaIni++;
        }
        */
        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
